{"version":3,"sources":["mybase.js","routes/Profile.js","routes/Auth.js","routes/tweet.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseInstance","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dbService","getFirestore","storageService","storage","authService","getAuth","mybase","userObj","navigate","useNavigate","getMypost","a","getDocs","query","collection","where","uid","orderBy","tweets","console","log","docs","map","doc","data","useEffect","className","onClick","signOut","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","browserPopupRedirectResolver","icon","faStackExchange","color","size","style","marginBottom","type","placeholder","required","prev","faGoogle","faFacebook","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","deleteTweet","window","confirm","deleteDoc","id","refFromURL","imgUrl","delete","editTweet","updateDoc","autoFocus","src","faTrash","faPencilAlt","Home","tweet","setTweet","setTweets","imgfile","setImgfile","onSnapshot","snapshot","tweetArray","fileRef","ref","child","uuidv4","putString","response","getDownloadURL","post","createdAt","Date","now","creatorId","addDoc","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgoundImage","faTimes","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e9ccbd1.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCG_7xL5bDmSH05TGA_RdQ2JT3eyT2bZ10\",\r\n  authDomain: \"mwitter-aacaa.firebaseapp.com\",\r\n  projectId: \"mwitter-aacaa\",\r\n  storageBucket: \"mwitter-aacaa.appspot.com\",\r\n  messagingSenderId: \"933702655646\",\r\n  appId: \"1:933702655646:web:8e8ff70b8b647dfd0ce58f\",\r\n  measurementId: \"G-7WDVZ49J8Y\"\r\n};\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\n\r\nexport default firebase.initializeApp(firebaseConfig);\r\nexport const dbService = getFirestore();\r\nexport const storageService = firebase.storage();","import React from \"react\";\r\nimport mybase, { dbService } from \"mybase\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { collection, getDocs, orderBy, query, where } from \"firebase/firestore\";\r\n\r\nconst authService = getAuth(mybase)\r\nexport default ({userObj}) => {\r\n    const navigate = useNavigate();\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        navigate(\"/\");\r\n    };\r\n    const getMypost = async() =>{\r\n        const tweets = await getDocs(query(collection(dbService, 'tweet'), where('creatorId', '==', userObj.uid), orderBy('createdAt')));\r\n        console.log(tweets.docs.map((doc)=>doc.data()))\r\n    };\r\n    useEffect(()=>{\r\n        getMypost();\r\n    },[])\r\n    return (\r\n    <div className=\"container\">\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n    </div>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport mybase, { firebaseInstance } from \"mybase\";\r\nimport {getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, browserPopupRedirectResolver} from \"firebase/auth\";\r\nimport * as firebase from \"firebase/app\"\r\nimport 'styles.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faFacebook,\r\n  faStackExchange,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { stackExchange } from \"fontawesome\";\r\n\r\n\r\n<script src=\"https://www.gstatic.com/firebasejs/5.9.1/firebase-auth.js\"></script>\r\nconst authService = getAuth(mybase)\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) =>{\r\n        const {target: {name, value}} = event;\r\n        if (name === \"email\"){\r\n            setEmail(value);\r\n        }\r\n        else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = createUserWithEmailAndPassword(authService, email, password);\r\n            }\r\n            else{\r\n                data = signInWithEmailAndPassword(authService, email,password);\r\n                }\r\n                console.log(data);\r\n        } catch(error){\r\n            setError(error.message);\r\n        }\r\n\r\n        \r\n    }\r\n    const toggleAccount = () => setNewAccount((prev)=>!prev);\r\n\r\n    const onSocialClick = async(event) =>{\r\n        const {\r\n            target: {name},\r\n        } = event;\r\n        let provider;\r\n        if(name==='google'){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            provider.addScope('profile');\r\n            provider.addScope('email');\r\n        }\r\n        \r\n        const data = await signInWithPopup(authService, provider, browserPopupRedirectResolver);\r\n        console.log(data);\r\n    };\r\nreturn(\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon icon={faStackExchange} color=\"#04AAFF\" size=\"3x\" style={{marginBottom: 30}} />\r\n        <form onSubmit={onSubmit} className=\"container\" >\r\n            <input name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n\r\n            <input name = \"password\" type=\"password\" placeholder=\"Password\" required\r\n            value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\" value={newAccount? \"Create Account\": \"Log In\"} className=\"authInput authSubmit\"/>\r\n            {error && <span className=\"autherror\">{error}</span>}\r\n        </form>\r\n        \r\n        <span onClick = {toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Log In\" : \"Create Account\"}\r\n        </span>\r\n\r\n        <div className=\"authBtns\">\r\n            <button name=\"google\" onClick={onSocialClick} className=\"authBtn\" >\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button name=\"facebook\" className=\"authBtn\" >\r\n                Continue with Facebook <FontAwesomeIcon icon={faFacebook} />\r\n            </button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Auth;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport { dbService, storageService } from \"mybase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport {faTrash, faPencilAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n    const deleteTweet = async() =>{\r\n        const ok = window.confirm(\"정말로 삭제하시겠습니까?\"); //confirm 공부하기\r\n        if (ok){\r\n            await deleteDoc(doc(dbService,'tweet',tweetObj.id));\r\n            await storageService.refFromURL(tweetObj.imgUrl).delete();\r\n        }\r\n    }\r\n    \r\n    const editTweet = () =>{\r\n        setEditing((prev)=> !prev);\r\n    }\r\n    const onChange = (event)=>{\r\n        const{\r\n            target:{value},\r\n        } = event;\r\n        setNewTweet(value);\r\n    }\r\n\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService,'tweet',tweetObj.id), {\r\n            text:newTweet\r\n        })\r\n        setEditing(false);\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing===true ? <>\r\n                {isOwner && (<>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\" placeholder=\"Edit it!\" value={newTweet}\r\n                        required autoFocus\r\n                        onChange={onChange} className=\"formInput\"/>\r\n                        <input type='submit' value=\"Update Tweet\" className=\"formBtn\"></input>\r\n                        <button onClick={editTweet} className=\"formBtn cancelBtn\">Cancel</button>\r\n                    </form>\r\n                </>)}\r\n            </>:<>\r\n            <div key={tweetObj.id}>\r\n                    <h4>{tweetObj.text}</h4>\r\n                    {tweetObj.imgUrl && <img src={tweetObj.imgUrl}/>}\r\n                    {isOwner && <>\r\n                    <div className=\"nweet__actions\">\r\n                        <span onClick={deleteTweet}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={editTweet}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>\r\n                    </>}\r\n                </div>\r\n            </> }\r\n        </div>\r\n    );\r\n    }\r\n\r\nexport default Tweet;","import { dbService, storageService } from \"mybase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { collection, addDoc, getDoc, getDocsFromCache, query, getDocs, onSnapshot } from \"firebase/firestore\";\r\nimport { map } from \"@firebase/util\";\r\nimport Tweet from \"./tweet\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [tweets, setTweets] = useState([]);\r\n    const [imgfile, setImgfile] = useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n        onSnapshot(collection(dbService,'tweet'),(snapshot)=>{\r\n            const tweetArray = snapshot.docs.map(doc=>({id:doc.id,...doc.data(),}));\r\n            setTweets(tweetArray);\r\n        });\r\n    }, []);\r\n\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        let imgUrl = \"\";\r\n        if (imgfile!==\"\"){\r\n            const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await fileRef.putString(imgfile, \"data_url\");\r\n            imgUrl = await response.ref.getDownloadURL()\r\n        }\r\n\r\n        const post = {\r\n            text: tweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            imgUrl,\r\n        }\r\n        await addDoc(collection(dbService, \"tweet\"), post)\r\n        setTweet('');\r\n        setImgfile('');\r\n        // const DocRef = await addDoc(collection(dbService,\"tweet\"),{\r\n        //     text: tweet,\r\n        //     createdAt: Date.now(),\r\n        //     creatorId: userObj.uid,\r\n        // });\r\n        // setTweet(\"\")\r\n    };\r\n    const onChange = (event) =>{\r\n        const {target:{value},} = event;\r\n        setTweet(value);\r\n    };\r\n    const onFileChange = (event) =>{\r\n        const {\r\n            target: {files},\r\n        }=event;\r\n    \r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) =>{\r\n        const{\r\n            currentTarget: {result},\r\n        }=finishedEvent;\r\n        setImgfile(result);\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n    }\r\n\r\n    const clearPhoto = () => setImgfile(\"\");\r\n    // opacity:0은 뭔지 알아보기\r\n    //onClick={clearPhoto()} 문제 해결하기\r\n    return(\r\n    <div className=\"container\">    \r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={tweet}\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                    onChange={onChange}\r\n                    className=\"factoryInput__input\">\r\n                    </input>\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"></input>\r\n            </div>\r\n            <label for='attach-file' className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            \r\n            <input id='attach-file' type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity:0,}}/>\r\n                \r\n                {imgfile && \r\n\r\n                    (<div className=\"factoryForm__attachment\">\r\n                        <img src={imgfile} style={{backgoundImage: imgfile,}}/>\r\n                        <div className=\"factoryForm__clear\" onClick={clearPhoto} >\r\n                            <span >Remove</span>\r\n                            <FontAwesomeIcon icon={faTimes} />\r\n                        </div>\r\n                    </div>)\r\n\r\n                }\r\n            \r\n        </form>\r\n        <div key={tweet.id} style={{marginTop: 30}}>\r\n            {tweets.map(tweet=>\r\n                <Tweet tweetObj={tweet} isOwner={tweet.creatorId===userObj.uid}/>)}\r\n        </div>\r\n    </div>\r\n    \r\n    );\r\n}\r\n\r\nexport default Home;","import react from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport 'styles.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faStackExchange, faTwitter} from '@fortawesome/free-brands-svg-icons'\r\nimport {faUser} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Navigation = () =>\r\n<nav>\r\n    \r\n    <ul style={{display:'flex', justifyContent: 'center', marginTop: 50} }>\r\n        <li>\r\n            <Link to=\"/\" style={{marginRight: 25}}>\r\n                <FontAwesomeIcon icon={faStackExchange} color=\"#04AAFF\" size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link to=\"/profile\" style={{marginLeft: 25,\r\n                display: 'flex',\r\n                flexDirection:'column',\r\n                alignItems:'center',\r\n                fontSize: 12, }} >\r\n                <FontAwesomeIcon icon={faUser} color=\"#04AAFF\" size=\"2x\" />\r\n                <span style={{marginTop: 10}}>\r\n                    Profile\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>;\r\n\r\n\r\n\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport mybase from \"../mybase\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\n\r\nconst AppRouter = ({isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation/>}\r\n                {isLoggedIn ? (\r\n                    <div style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}>\r\n                        <Routes>\r\n                            <Route exact path = \"/\" element={<Home userObj={userObj}/>}></Route>\r\n                            <Route exact path = \"/profile\" element={<Profile userObj={userObj}/>}/>\r\n                        </Routes>\r\n                    </div>    \r\n                )\r\n                : (\r\n                    <Routes>\r\n                        <Route exact path = \"/\" element={<Auth />}/>\r\n                    </Routes>\r\n                )}\r\n                \r\n            \r\n        </Router>\r\n        // 위의 코드는 isLoggedIn이 True이면 Home을, 아니면 Auth를 반환\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport mybase from \"mybase\";\nimport {getAuth, onAuthStateChanged} from \"firebase/auth\";\n\nfunction App(){\n  const authService = getAuth(mybase)\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); //이걸 지워버리고 userObj를 Boolean(userObj)로 해서 구분하는것도 가능하다\n  const [userObj, setUserObj] = useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj(user);\n      }\n      else{\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  },[])\n  return (\n  <>\n  {init ? (\n    \n    <AppRouter isLoggedIn = {isLoggedIn} userObj={userObj}/>\n    \n    \n    \n  \n    ):(\n    \"Initializing...\"\n  )}\n  \n  <footer>&copy; Anorum {new Date().getFullYear()}</footer>\n  </>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport mybase from \"./mybase\";\nimport './styles.css'\nconsole.log(mybase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}